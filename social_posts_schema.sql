-- Create social_posts table
CREATE TABLE IF NOT EXISTS social_posts (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  vehicle_id BIGINT REFERENCES vehicles(id),
  dealership_id BIGINT REFERENCES dealerships(id) NOT NULL,
  content TEXT NOT NULL,
  platform VARCHAR(50) NOT NULL, -- 'facebook', 'instagram', 'google'
  post_id VARCHAR(255), -- ID returned from the social media platform
  image_urls TEXT[], -- Array of image URLs used in the post
  status VARCHAR(50) DEFAULT 'posted', -- 'posted', 'scheduled', 'failed'
  scheduled_for TIMESTAMP WITH TIME ZONE, -- NULL for immediate posts
  metadata JSONB -- Additional platform-specific data
);

-- Add indexes for common queries
CREATE INDEX IF NOT EXISTS social_posts_vehicle_id_idx ON social_posts(vehicle_id);
CREATE INDEX IF NOT EXISTS social_posts_dealership_id_idx ON social_posts(dealership_id);
CREATE INDEX IF NOT EXISTS social_posts_created_at_idx ON social_posts(created_at);
CREATE INDEX IF NOT EXISTS social_posts_platform_idx ON social_posts(platform);

-- Add RLS policies
ALTER TABLE social_posts ENABLE ROW LEVEL SECURITY;

-- Policy to allow users to view posts from their dealership
CREATE POLICY social_posts_select_policy ON social_posts
  FOR SELECT USING (
    dealership_id IN (
      SELECT id FROM dealerships WHERE user_id = auth.uid()
    )
  );

-- Policy to allow users to insert posts for their dealership
CREATE POLICY social_posts_insert_policy ON social_posts
  FOR INSERT WITH CHECK (
    dealership_id IN (
      SELECT id FROM dealerships WHERE user_id = auth.uid()
    )
  );

-- Policy to allow users to update posts from their dealership
CREATE POLICY social_posts_update_policy ON social_posts
  FOR UPDATE USING (
    dealership_id IN (
      SELECT id FROM dealerships WHERE user_id = auth.uid()
    )
  );

-- Policy to allow users to delete posts from their dealership
CREATE POLICY social_posts_delete_policy ON social_posts
  FOR DELETE USING (
    dealership_id IN (
      SELECT id FROM dealerships WHERE user_id = auth.uid()
    )
  );
